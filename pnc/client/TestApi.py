#!/usr/bin/env python
"""
TestApi.py
Copyright 2015 Reverb Technologies, Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
"""
import sys
import os
import urllib

from models import *


class TestApi(object):

    def __init__(self, api_client):
      self.api_client = api_client

    
    def sendBuildSetStatusChangedEvent(self, **kwargs):
        """Sends BuildSetStatusChangedEvent just like it was from Core, useful for testing WebSockets

        Args:
            
            body, BuildSetStatusChangedEvent:  (required)
            
        Returns: 
        """

        all_params = ['body']

        params = locals()
        for (key, val) in params['kwargs'].iteritems():
            if key not in all_params:
                raise TypeError("Got an unexpected keyword argument '%s' to method sendBuildSetStatusChangedEvent" % key)
            params[key] = val
        del params['kwargs']

        resource_path = '/test/build-set-status/notify'
        resource_path = resource_path.replace('{format}', 'json')
        method = 'POST'

        query_params = {}
        header_params = {}
        form_params = {}
        files = {}
        body_param = None

        

        

        

        

        
        if 'body' in params:
            body_param = params['body']
        

        post_data = (form_params if form_params else body_param)

        response = self.api_client.callAPI(resource_path, method, query_params,
                                          post_data, header_params, files=files)
        return response

   
    def sendBuildStatusChangedEvent(self, **kwargs):
        """Sends BuildStatusChangedEvent just like it was from Core, useful for testing WebSockets

        Args:
            
            body, BuildStatusChangedEventRest:  (required)
            
        Returns: 
        """

        all_params = ['body']

        params = locals()
        for (key, val) in params['kwargs'].iteritems():
            if key not in all_params:
                raise TypeError("Got an unexpected keyword argument '%s' to method sendBuildStatusChangedEvent" % key)
            params[key] = val
        del params['kwargs']

        resource_path = '/test/build-status/notify'
        resource_path = resource_path.replace('{format}', 'json')
        method = 'POST'

        query_params = {}
        header_params = {}
        form_params = {}
        files = {}
        body_param = None

        

        

        

        

        
        if 'body' in params:
            body_param = params['body']
        

        post_data = (form_params if form_params else body_param)

        response = self.api_client.callAPI(resource_path, method, query_params,
                                          post_data, header_params, files=files)
        return response

   
